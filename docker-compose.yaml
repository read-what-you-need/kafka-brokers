version: "2.1"

services:
  zoo:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zoo
    container_name: zoo
    networks:
      - kafka-network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888
    volumes:
      - ./zoo/data:/var/lib/zookeeper/data
      - ./zoo/log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9999:9999"
    networks:
      - kafka-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - ./broker/data:/var/lib/kafka/data
    depends_on:
      - zoo

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - kafka-network
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zoo:2181
    depends_on:
      - zoo
      - kafka

  kafka-init-topics:
      image: confluentinc/cp-kafka:7.0.1
      depends_on:
        - kafka
      networks:
        - kafka-network
      command: "bash -c 'echo Waiting for Kafka to be ready... && \
        cub kafka-ready -b kafka:19092 1 30 && \
        kafka-topics --create --topic files_job_submit --partitions 6 --replication-factor 2 --if-not-exists --zookeeper zoo:2181 && \
        kafka-topics --create --topic files_converted_and_uploaded --partitions 4 --replication-factor 2 --if-not-exists --zookeeper zoo:2181 && \
        kafka-topics --create --topic files_processed --partitions 2 --replication-factor 2 --if-not-exists --zookeeper zoo:2181 && \
        kafka-topics --create --topic files_to_process --partitions 6 --replication-factor 2 --if-not-exists --zookeeper zoo:2181'"

networks:
  kafka-network:
    name: kafka-docker-network
